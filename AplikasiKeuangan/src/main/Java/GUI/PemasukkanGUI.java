/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;

import java.sql.SQLException;
import java.text.NumberFormat;
import java.util.List;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JScrollPane;
import java.time.LocalDate;
import java.time.ZoneId;
import java.time.format.DateTimeFormatter;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import Storage.KategoriPemasukkanStorage;
import model.Pemasukkan;
import Storage.PemasukkanStorage;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
/**
 *
 * @author DICKY SAPUTRA
 */
public class PemasukkanGUI extends javax.swing.JFrame {
int row;
List<Pemasukkan> list = new ArrayList<>();
KategoriPemasukkanStorage pilihKategori = new KategoriPemasukkanStorage();
PemasukkanStorage pemasukkanStorage = new PemasukkanStorage();



    /**
     * Creates new form PengeluaranGUI
     */
    public PemasukkanGUI()  {
        initComponents();
        getAllPemasukkan();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        editbtn = new javax.swing.JButton();
        hapusbtn = new javax.swing.JButton();
        caribtn = new javax.swing.JButton();
        cariField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        refreshbtn = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablePemasukkan = new javax.swing.JTable();
        btnTambahPemasukkan = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 153, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 51, 255)));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Pemasukkan");

        editbtn.setBackground(new java.awt.Color(0, 153, 255));
        editbtn.setIcon(new javax.swing.ImageIcon("C:\\Users\\DICKY SAPUTRA\\Documents\\NetBeansProjects\\AplikasiKeuangan\\src\\main\\Java\\gambar\\ubah.png")); // NOI18N
        editbtn.setBorder(null);
        editbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editbtnActionPerformed(evt);
            }
        });

        hapusbtn.setBackground(new java.awt.Color(0, 153, 255));
        hapusbtn.setIcon(new javax.swing.ImageIcon("C:\\Users\\DICKY SAPUTRA\\Documents\\NetBeansProjects\\AplikasiKeuangan\\src\\main\\Java\\gambar\\delete.png")); // NOI18N
        hapusbtn.setBorder(null);
        hapusbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hapusbtnActionPerformed(evt);
            }
        });

        caribtn.setBackground(new java.awt.Color(0, 153, 255));
        caribtn.setIcon(new javax.swing.ImageIcon("C:\\Users\\DICKY SAPUTRA\\Documents\\NetBeansProjects\\AplikasiKeuangan\\src\\main\\Java\\gambar\\cari.png")); // NOI18N
        caribtn.setBorder(null);
        caribtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                caribtnActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Cari");

        refreshbtn.setBackground(new java.awt.Color(0, 153, 255));
        refreshbtn.setIcon(new javax.swing.ImageIcon("C:\\Users\\DICKY SAPUTRA\\Documents\\NetBeansProjects\\AplikasiKeuangan\\src\\main\\Java\\gambar\\refresh.png")); // NOI18N
        refreshbtn.setBorder(null);
        refreshbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshbtnActionPerformed(evt);
            }
        });

        jButton1.setText("Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cariField, javax.swing.GroupLayout.PREFERRED_SIZE, 433, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(caribtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(hapusbtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(editbtn))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(3, 3, 3)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(refreshbtn)
                .addGap(133, 133, 133)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(editbtn))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(refreshbtn)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jButton1))
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(hapusbtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(caribtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(cariField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );

        tablePemasukkan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "Jumlah Pemasukkan", "Nama Kategori", "Tanggal Pemasukkan", "Catatan"
            }
        ));
        jScrollPane1.setViewportView(tablePemasukkan);

        btnTambahPemasukkan.setBackground(new java.awt.Color(0, 153, 255));
        btnTambahPemasukkan.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnTambahPemasukkan.setForeground(new java.awt.Color(255, 255, 255));
        btnTambahPemasukkan.setText("+Tambah");
        btnTambahPemasukkan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTambahPemasukkanActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(btnTambahPemasukkan, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 612, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnTambahPemasukkan, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnTambahPemasukkanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTambahPemasukkanActionPerformed
        // TODO add your handling code here:
        TambahPemasukkanGUIFORM tambah = new TambahPemasukkanGUIFORM();
        tambah.setVisible(true);
        tambah.addWindowListener(new WindowAdapter(){public void windowClosed(WindowEvent e){getAllPemasukkan();}});
        dispose();
    }//GEN-LAST:event_btnTambahPemasukkanActionPerformed

    private void editbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editbtnActionPerformed
        // TODO add your handling code here:
        try {
        int selectedRow = tablePemasukkan.getSelectedRow();
        int id_pengeluaran = Integer.parseInt(tablePemasukkan.getValueAt(selectedRow, 0).toString());
        String jumlahPengeluaranString = tablePemasukkan.getValueAt(selectedRow, 1).toString();
        String jumlahPengeluaranCleaned = jumlahPengeluaranString.replaceAll("[^\\d]", ""); 
        int jumlahPengeluaranAwal = Integer.parseInt(jumlahPengeluaranCleaned);
        int jumlah_pengeluaran = jumlahPengeluaranAwal/100;
        String nama_kategori = tablePemasukkan.getValueAt(selectedRow, 2).toString();
        String tanggalString = tablePemasukkan.getValueAt(selectedRow, 3).toString();
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd");
        LocalDate tanggal_pengeluaran = LocalDate.parse(tanggalString, formatter);
        String note = tablePemasukkan.getValueAt(selectedRow, 4).toString();

        int id_kategori_pengeluaran = pilihKategori.getKategoriId(nama_kategori); 
        EditPemasukkanGUIFORM edit = new EditPemasukkanGUIFORM(id_pengeluaran, id_kategori_pengeluaran, jumlah_pengeluaran, tanggal_pengeluaran, note);
        edit.setVisible(true);
        edit.addWindowListener(new WindowAdapter(){public void windowClosed(WindowEvent e){getAllPemasukkan();}});
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_editbtnActionPerformed

    private void hapusbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hapusbtnActionPerformed
        // TODO add your handling code here:
        int selectedRow = tablePemasukkan.getSelectedRow();
        int id_pengeluaran = (int) tablePemasukkan.getValueAt(selectedRow, 0);
        try {
        Pemasukkan pemasukkan = new Pemasukkan(id_pengeluaran);
        int rowsAffected = pemasukkanStorage.deletePengeluaran(pemasukkan);
        if (rowsAffected > 0) {
            JOptionPane.showMessageDialog(null, "Data pemasukkan berhasil dihapus");
         } else {
            JOptionPane.showMessageDialog(null, "Gagal menghapus data pemasukkan");
        }
        }catch (SQLException e) {
            e.printStackTrace();
        }
        getAllPemasukkan();
    }//GEN-LAST:event_hapusbtnActionPerformed
    
    private void caribtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_caribtnActionPerformed
        // TODO add your handling code here:
        String keyword = cariField.getText();
        DefaultTableModel model = (DefaultTableModel) tablePemasukkan.getModel();
        model.setRowCount(0);
        try {
            List<Pemasukkan> listPemasukkan = pemasukkanStorage.getPemasukkanByNamaKategori(keyword);
            if(!listPemasukkan.isEmpty()){
                for(Pemasukkan pemasukkan : listPemasukkan){
                Object [] row = {
                pemasukkan.getId_pemasukkan(),
                pemasukkan.getJumlah_pemasukkan(),
                pemasukkan.getNama_kategori(),
                pemasukkan.getTanggal_pemasukkan(),
                pemasukkan.getNote()
                };
                model.addRow(row);
                }
            }else{
                JOptionPane.showMessageDialog(null, "Data tidak ada");
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_caribtnActionPerformed

    private void refreshbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshbtnActionPerformed
        // TODO add your handling code here:
        getAllPemasukkan();
    }//GEN-LAST:event_refreshbtnActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        new MainPageGUI().setVisible(true);
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed
    public void getAllPemasukkan() {
        try {
            NumberFormat formatter = NumberFormat.getCurrencyInstance(new Locale("id", "ID"));
            List<Pemasukkan> listPemasukkan = pemasukkanStorage.getdataPemasukkanById();
        
            DefaultTableModel model = new DefaultTableModel(
                new Object[][]{},
                new String[]{"ID","Jumlah Pemasukkan", "Nama Kategori", "Tanggal Pemasukkan", "Catatan"}
            );
        
            for (Pemasukkan pemasukkan : listPemasukkan ) {
                int id_pemasukkan = pemasukkan.getId_pemasukkan();
                int jumlah_pemasukkan = pemasukkan.getJumlah_pemasukkan();
                String format_jumlah_pemasukkan = formatter.format(jumlah_pemasukkan);
                String nama_kategori = pemasukkan.getNama_kategori();
                LocalDate tanggal_pemasukkan = pemasukkan.getTanggal_pemasukkan();
                DateTimeFormatter refactorDateTimeFormatter = DateTimeFormatter.ofPattern("yyyy-MM-dd");
                String tanggalFormatted = tanggal_pemasukkan.format(refactorDateTimeFormatter);
                String note = pemasukkan.getNote();
            
                model.addRow(new Object[]{id_pemasukkan, format_jumlah_pemasukkan, nama_kategori, tanggalFormatted, note});
            }
        
            tablePemasukkan.setModel(model);
            
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PemasukkanGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PemasukkanGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PemasukkanGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PemasukkanGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PemasukkanGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnTambahPemasukkan;
    private javax.swing.JTextField cariField;
    private javax.swing.JButton caribtn;
    private javax.swing.JButton editbtn;
    private javax.swing.JButton hapusbtn;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton refreshbtn;
    private javax.swing.JTable tablePemasukkan;
    // End of variables declaration//GEN-END:variables
}
